name: Run Azure Pipeline


on: 
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    paths:
      - '!*.md'
  # run on every pull request, but not those that only change markdown files
  pull_request:
    paths:
      - '!*.md'


jobs:
  # this runs train-evaluate-register stuff on the Azure compute instances.
  # basically, az ml job create --file azure/pipeline/pipeline.yml
  azure-pipeline:
    name: Run train/evaluate/register
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      
      - name: Setup Azure and Conda
        uses: ./.github/actions/setup-azure-conda
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Deploy
        run: |
          PYTHONPATH="lib" python azure/pipeline/main.py
        env:
          SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
          WORKSPACE_NAME: ${{ vars.AZURE_WORKSPACE_NAME }}

  test-endpoint:
    name: Test Endpoint on Docker
    uses: ./.github/workflows/test-endpoint.yml
    secrets: inherit

  deploy-endpoint:
    name: Deploy Endpoint
    runs-on: ubuntu-latest
    needs: [azure-pipeline, test-endpoint]
    # run only if it's a push to main (and not a PR)
    # https://stackoverflow.com/a/66206183
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    # this ensures only one instance of deploy-endpoint can be run at a time
    # https://docs.github.com/en/actions/using-jobs/using-concurrency
    # This is to avoid Azure `OperationDuplicationConflict` errors
    concurrency: deploy-endpoint
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      
      - name: Setup Azure and Conda
        uses: ./.github/actions/setup-azure-conda
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Deploy
        run: |
          PYTHONPATH="lib" python azure/deploy/main.py
        env:
          SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
          WORKSPACE_NAME: ${{ vars.AZURE_WORKSPACE_NAME }}

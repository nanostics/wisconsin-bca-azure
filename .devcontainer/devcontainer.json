// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/anaconda
{
	"name": "Wisconsin BCa on Azure",
	"build": {
		"context": "..",
		"dockerfile": "Dockerfile"
	},
	"features": {
		"ghcr.io/devcontainers/features/azure-cli:1": {},
		"ghcr.io/devcontainers/features/common-utils:2": {},
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/stuartleeks/dev-container-features/azure-cli-persistence:0": {},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {}
	},
	"customizations": {
		"vscode": {
			// set default python interpreter to our custom conda env
			"settings": {
				"python.defaultInterpreterPath": "/opt/conda/envs/env",
				// the `conda activate env` I add to `~/.bashrc` in `postcreate.sh` works better
				// than the activateEnvironment here.
				"python.terminal.activateEnvironment": false
			},
			"extensions": [
				"ms-toolsai.jupyter",
				"ms-azuretools.vscode-docker",
				"github.vscode-github-actions",
				"GitHub.copilot",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-toolsai.vscode-ai",
				"ms-vscode.azure-account"
			]
		}
	},
	// My custom post create command initializes conda and does some other stuff
	"postCreateCommand": "./.devcontainer/postcreate.sh"
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "python --version",
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}